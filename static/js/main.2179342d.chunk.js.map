{"version":3,"sources":["components/RenderCard.jsx","components/StudentCard.jsx","components/Field.jsx","components/StudentCardForm.jsx","utils/validator.js","App.js","reportWebVitals.js","index.js"],"names":["RenderCard","number","words","student","date","Date","getFullYear","className","name","surname","age","Math","abs","href","portfolio","StudentCard","onDelete","localStorage","length","to","type","onClick","Field","label","value","onChange","error","htmlFor","id","StudentCardForm","onAdd","history","useHistory","useState","errors","setErrors","data","setData","handleChange","target","prevState","validatorConfig","isRequired","message","isLetters","isDate","isLink","useEffect","validate","config","validateMethod","statusValidate","trim","test","fieldName","validator","Object","keys","isValid","onSubmit","e","preventDefault","console","log","replace","disabled","App","setStudent","addStudent","setItem","getItem","handleDelete","clear","path","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2179342d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst RenderCard = ({ student }) => {\r\n  const date = new Date().getFullYear()\r\n  function declOfNum(number, words) {\r\n    return words[\r\n      number % 100 > 4 && number % 100 < 20\r\n        ? 2\r\n        : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? Math.abs(number) % 10 : 5]\r\n    ]\r\n  }\r\n  return (\r\n    <div className=\"article-group\">\r\n      <div>\r\n        <span className=\"fw-bold\">Имя:</span>\r\n        <span>{student.name}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"fw-bold\">Фамилия:</span>\r\n        <span>{student.surname}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"fw-bold\">Год рождения:</span>\r\n        <span>{`${student.age}(${date - student.age}${declOfNum(\r\n          `${date - student.age}`,\r\n          [' год', ' года', ' лет']\r\n        )})`}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"fw-bold\">Портфолио:</span>\r\n        <a href={student.portfolio}>{student.portfolio}</a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderCard\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport RenderCard from './RenderCard'\r\n\r\nconst StudentCard = ({ student, onDelete }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Карточка студента</h1>\r\n      <div>\r\n        {localStorage.length ? (\r\n          <div>\r\n            <RenderCard student={student} />\r\n            <Link to=\"/student/edit\">\r\n              <button className=\"btn btn-primary\">Редактировать</button>\r\n            </Link>\r\n            <Link to=\"/student-card\">\r\n              <button\r\n                className=\"btn btn-danger m-2\"\r\n                type=\"button\"\r\n                onClick={onDelete}\r\n              >\r\n                Удалить\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>Нет данных</p>\r\n            <Link to=\"/student\">\r\n              <button className=\"btn btn-primary\">Добавить</button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentCard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Field = ({ label, type, name, value, onChange, error }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '')\r\n  }\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <div>\r\n        <label htmlFor={name}>{label}</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type={type}\r\n          id={name}\r\n          value={value}\r\n          name={name}\r\n          onChange={onChange}\r\n          className={getInputClasses()}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n}\r\n\r\nexport default Field\r\n","import React, { useEffect, useState } from 'react'\r\nimport Field from './Field'\r\nimport { Link } from 'react-router-dom'\r\nimport { validator } from '../utils/validator'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst StudentCardForm = ({ onAdd, student }) => {\r\n  const history = useHistory()\r\n  const [errors, setErrors] = useState({})\r\n  const [data, setData] = useState(\r\n    student\r\n      ? {\r\n          name: student.name,\r\n          surname: student.surname,\r\n          age: student.age,\r\n          portfolio: student.portfolio,\r\n        }\r\n      : {\r\n          name: '',\r\n          surname: '',\r\n          age: '',\r\n          portfolio: '',\r\n        }\r\n  )\r\n  const handleChange = ({ target }) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }))\r\n  }\r\n  const validatorConfig = {\r\n    name: {\r\n      isRequired: { message: 'Поле Имя обязательно для заполнения' },\r\n      isLetters: { message: 'Поле должно содержать буквы' },\r\n    },\r\n    surname: {\r\n      isRequired: { message: 'Поле Фамилия обязательно для заполнения' },\r\n      isLetters: { message: 'Поле должно содержать буквы' },\r\n    },\r\n    age: {\r\n      isRequired: { message: 'Поле Дата рождения обязательно для заполнения' },\r\n      isDate: {\r\n        message: 'Поле введено не корректно',\r\n      },\r\n    },\r\n    portfolio: {\r\n      isRequired: { message: 'Поле Портфолио обязательно для заполнения' },\r\n      isLink: {\r\n        message: 'Поле должно содердать ссылку',\r\n      },\r\n    },\r\n  }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  const isValid = Object.keys(errors).length === 0\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const isValid = validate()\r\n    if (!isValid) return\r\n    console.log(data)\r\n    onAdd(data.name, data.surname, data.age, data.portfolio)\r\n    history.replace('/')\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Создать</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <Field\r\n          label=\"Имя\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={data.name}\r\n          onChange={handleChange}\r\n          error={errors.name}\r\n        />\r\n        <Field\r\n          label=\"Фамилия\"\r\n          type=\"text\"\r\n          name=\"surname\"\r\n          value={data.surname}\r\n          onChange={handleChange}\r\n          error={errors.surname}\r\n        />\r\n        <Field\r\n          label=\"Год рождения\"\r\n          type=\"number\"\r\n          name=\"age\"\r\n          value={data.age}\r\n          onChange={handleChange}\r\n          error={errors.age}\r\n        />\r\n        <Field\r\n          label=\"Портфолио\"\r\n          type=\"text\"\r\n          name=\"portfolio\"\r\n          value={data.portfolio}\r\n          onChange={handleChange}\r\n          error={errors.portfolio}\r\n        />\r\n        {student ? (\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary m-2\"\r\n              disabled={!isValid}\r\n            >\r\n              Обновить\r\n            </button>\r\n            <Link to=\"/\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                Назад\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary mt-2\"\r\n            disabled={!isValid}\r\n          >\r\n            Создать\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StudentCardForm\r\n","export function validator(data, config) {\r\n  const errors = {}\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate\r\n    switch (validateMethod) {\r\n      case 'isRequired':\r\n        statusValidate = data.trim() === ''\r\n        break\r\n      case 'isLink': {\r\n        const linkRegExp = /^\\S+\\:\\/\\/\\S+\\.\\S+$/g\r\n        statusValidate = !linkRegExp.test(data)\r\n        break\r\n      }\r\n      case 'isDate': {\r\n        const date = new Date()\r\n        const year = date.getFullYear()\r\n        statusValidate = data > year || data < 1900\r\n        break\r\n      }\r\n      case 'isLetters': {\r\n        const lettersRegExp = /^[A-zА-я]+$/g\r\n        statusValidate = !lettersRegExp.test(data)\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n    if (statusValidate) return config.message\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(\r\n        validateMethod,\r\n        data[fieldName],\r\n        config[fieldName][validateMethod]\r\n      )\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error\r\n      }\r\n    }\r\n  }\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport StudentCard from './components/StudentCard'\r\nimport StudentCardForm from './components/StudentCardForm'\r\n\r\nfunction App() {\r\n  const [student, setStudent] = useState()\r\n  const addStudent = (name, surname, age, portfolio) => {\r\n    setStudent(\r\n      localStorage.setItem('name', name),\r\n      localStorage.setItem('surname', surname),\r\n      localStorage.setItem('age', age),\r\n      localStorage.setItem('portfolio', portfolio)\r\n    )\r\n  }\r\n\r\n  if (!student) {\r\n    setStudent({\r\n      name: localStorage.getItem('name'),\r\n      surname: localStorage.getItem('surname'),\r\n      age: localStorage.getItem('age'),\r\n      portfolio: localStorage.getItem('portfolio'),\r\n    })\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    localStorage.clear()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route\r\n          path=\"/student-card\"\r\n          render={(props) => (\r\n            <StudentCard student={student} onDelete={handleDelete} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/student/edit\"\r\n          render={(props) => (\r\n            <StudentCardForm student={student} onAdd={addStudent} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/student\"\r\n          render={(props) => <StudentCardForm onAdd={addStudent} />}\r\n        />\r\n        <Redirect to=\"/student-card\" />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}